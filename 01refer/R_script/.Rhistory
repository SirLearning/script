install.packages("learnr")
?mean
help.search("weighted mean")
help(package = 'dplyr')
str(iris)
class(iris)
2:6
rep(1:5, each = 3)
x <- c(1, 2, 3)
rev(x)
file.edit(file.path("~", ".Rprofile"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rtracklayer")
setwd("~/Documents/Python/script")
setwd("~/Documents/Python/script")
source("~/Documents/Python/script/04analysis/stats.R", echo=TRUE)
library(tidyverse)
library(rtracklayer)
Aly.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
Ath.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
Aly.allTE = import("test_data/chr1A.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Aly", genome_size = 1.5e8)
Ath.allTE = import("test_data/filter.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Ath", genome_size = 1.5e8)
allTE = rbind(Aly.allTE, Ath.allTE) %>%
mutate(Classification0 =
str_split(Classification, "/", simplify = TRUE)[,1])
rm(Aly.allTE, Ath.allTE)
allTE_summ = filter(allTE,
!(type %in% c("repeat_region", "target_site_duplication", "long_terminal_repeat"))) %>%
group_by(Species, Classification0) %>%
summarise(
count = n(),
mean_size = mean(width),
size = sum(width),
percent = sum(width) / mean(genome_size) * 100
)
library(ggsci)
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
clearPushBack()
library(tidyverse)
library(rtracklayer)
Aly.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
library(rtracklayer)
Aly.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
cd 04
setwd("~/Documents/Python/script/04analysis")
Aly.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
Ath.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
Aly.allTE = import("test_data/chr1A.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Aly", genome_size = Aly.genome_size)
Ath.allTE = import("test_data/filter.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Ath", genome_size = Ath.genome_size)
allTE = rbind(Aly.allTE, Ath.allTE) %>%
mutate(Classification0 =
str_split(Classification, "/", simplify = TRUE)[,1])
rm(Aly.allTE, Ath.allTE)
allTE_summ = filter(allTE,
!(type %in% c("repeat_region", "target_site_duplication", "long_terminal_repeat"))) %>%
group_by(Species, Classification0) %>%
summarise(
count = n(),
mean_size = mean(width),
size = sum(width),
percent = sum(width) / mean(genome_size) * 100
)
View(allTE_summ)
View(allTE_summ)
library(ggsci)
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
View(allTE_summ)
View(allTE_summ)
library(ggsci)
ggplot(data = allTE_summ, aes(x = Classification0, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
library(ggsci)
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification0, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification0, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
library(ggsci)
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
clear
clearPushBack()
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
library(tidyverse)
library(rtracklayer)
Aly.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
Ath.genome_size = sum(read.table(file = "test_data/chr1A.fa.fai")$V2)
Aly.allTE = import("test_data/chr1A.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Aly", genome_size = Aly.genome_size)
Ath.allTE = import("test_data/filter.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Ath", genome_size = Ath.genome_size)
allTE = rbind(Aly.allTE, Ath.allTE) %>%
mutate(Classification0 =
str_split(Classification, "/", simplify = TRUE)[,1])
rm(Aly.allTE, Ath.allTE)
allTE_summ = filter(allTE,
!(type %in% c("repeat_region", "target_site_duplication", "long_terminal_repeat"))) %>%
group_by(Species, Classification) %>%
summarise(
count = n(),
mean_size = mean(width),
size = sum(width),
percent = sum(width) / mean(genome_size) * 100
)
library(ggsci)
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
View(allTE_summ)
View(allTE_summ)
install.packages("hiAnnotator")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("hiAnnotator")
setwd("~/Documents/Python/script/04analysis/01Rstats")
library(tidyverse)
library(rtracklayer)
Aly.genome_size = sum(read.table(file = "../data/chr1A.fa.fai")$V2)
Ath.genome_size = sum(read.table(file = "../data/chr1A.fa.fai")$V2)
Aly.allTE = import("../data/chr1A.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Aly", genome_size = Aly.genome_size)
Ath.allTE = import("../data/filter.anno.gff3") %>%
as_tibble() %>%
mutate(Species = "Ath", genome_size = Ath.genome_size)
allTE = rbind(Aly.allTE, Ath.allTE) %>%
mutate(Classification0 =
str_split(Classification, "/", simplify = TRUE)[,1])
rm(Aly.allTE, Ath.allTE)
allTE_summ = filter(allTE,
!(type %in% c("repeat_region", "target_site_duplication", "long_terminal_repeat"))) %>%
group_by(Species, Classification) %>%
summarise(
count = n(),
mean_size = mean(width),
size = sum(width),
percent = sum(width) / mean(genome_size) * 100
)
# stats of number of TEs
intactTE = filter(allTE, Method=="structural")
intactTE_summ = group_by(allTE, Species, Classification) %>%
summarise(
count = n(),
size = sum(width),
percent = sum(width) / mean(genome_size) * 100
)
View(allTE_summ)
View(allTE_summ)
View(intactTE_summ)
library(ggsci)
# length of the genome
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Clasification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
# length of the genome
ggplot(data = allTE_summ, aes(x = Classification, y = size)) +
geom_col(aes(fill = Classification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
# proportion of the genome
ggplot(data = allTE_summ, aes(x = Classification, y = percent)) +
geom_col(aes(fill = Classification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
# number of TEs
ggplot(data = intactTE_summ, aes(x = Classification, y = count)) +
geom_col(aes(fill = Classification, group = Species),
width = 0.7, color = "black", position = "dodge") +
scale_fill_igv() +
labs(x = NULL, color = NULL, fill = NULL) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
install.packages('RIdeogram')
require(RIdeogram)
pwd
pwd()
setwd("~/Documents/Python/script/04analysis/01Rstats")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# The following initializes usage of Bioc devel
BiocManager::install(version='devel')
R
R version
version
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
