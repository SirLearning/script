// Nextflow Configuration File for Transposon Analysis Pipeline

// Pipeline information
manifest {
    name            = 'Transposon Analysis Pipeline'
    author          = 'Bioinformatics Team'
    homePage        = 'https://github.com/your-repo'
    description     = 'A pipeline for analyzing transposon composition and statistics'
    mainScript      = 'transposon_analysis_simple.nf'
    nextflowVersion = '>=21.10.3'
    version         = '1.0.0'
}

// Default parameters
params {
    // Input/Output options
    input_data      = "newplot.txt"
    gff_file        = "chr1A.gff3"
    lib_file        = "*.lib"
    output_dir      = "results"
    
    // Show help
    help            = false
    
    // Max resource options
    max_memory      = '8.GB'
    max_cpus        = 4
    max_time        = '2.h'
}

// Process configuration
process {
    // Default resources for all processes
    memory = { 2.GB * task.attempt }
    time   = { 1.h * task.attempt }
    cpus   = 1
    
    // Error handling
    errorStrategy = 'retry'
    maxRetries    = 2
    
    // Process-specific configurations
    withName: TRANSPOSON_COMPOSITION_ANALYSIS {
        memory = '4.GB'
        time   = '30.min'
    }
    
    withName: GFF_CATEGORY_COUNT {
        memory = '2.GB'
        time   = '20.min'
    }
    
    withName: QUALITY_CONTROL {
        memory = '1.GB'
        time   = '10.min'
    }
    
    withName: GENERATE_REPORT {
        memory = '1.GB'
        time   = '15.min'
    }
}

// Execution profiles
profiles {
    // Local execution (default)
    standard {
        process.executor = 'local'
        process.cpus = 2
        process.memory = '4.GB'
    }
    
    // Docker profile
    docker {
        docker.enabled = true
        process.container = 'python:3.9-slim'
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    
    // Conda profile
    conda {
        process.conda = 'python=3.9 numpy pandas'
    }
    
    // High performance profile
    hpc {
        process.executor = 'slurm'
        process.queue = 'normal'
        process.cpus = 4
        process.memory = '8.GB'
        process.time = '2.h'
    }
    
    // Testing profile with reduced resources
    test {
        params.max_memory = '2.GB'
        params.max_cpus = 2
        params.max_time = '30.min'
    }
}

// Timeline and report configuration
timeline {
    enabled = true
    file = "${params.output_dir}/pipeline_info/execution_timeline.html"
}

report {
    enabled = true
    file = "${params.output_dir}/pipeline_info/execution_report.html"
}

trace {
    enabled = true
    file = "${params.output_dir}/pipeline_info/execution_trace.txt"
}

dag {
    enabled = true
    file = "${params.output_dir}/pipeline_info/pipeline_dag.svg"
}

// Cleanup options
cleanup = false

// Resume configuration
resume = true
